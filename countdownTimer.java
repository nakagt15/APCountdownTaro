/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package learn;
import java.util.*;
import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author taronakagawa
 */

public class APCountdownGUI extends javax.swing.JFrame {
         Integer seconds;
         Integer days;
         Integer minutes;
         Integer hours;
    /**
     * Creates new form APCountdownGUI
     */
    public void APCountdownGUI() 
    {
        initComponents();
        Timer timer = new Timer();
        TimerTask task = new TimerTask(){
        public void run(){
                
             }
         };
timer.scheduleAtFixedRate(task, 0, 1000); }
        //@Override
        /*public void runner()
        {
            /*DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            Date date = new Date();
            System.out.println(dateFormat.format(date)); 
        }*/

    /*private void initComponents() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }*/
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        timerstart = new javax.swing.JButton();
        Seconds = new javax.swing.JTextField();
        Secondslabel = new javax.swing.JLabel();
        Minuteslabel = new javax.swing.JLabel();
        Hourslabel = new javax.swing.JLabel();
        Dayslabel = new javax.swing.JLabel();

        jToolBar1.setRollover(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("APCountDown");

        timerstart.setText("Start Timer");
        timerstart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timerstartActionPerformed(evt);
            }
        });

        Seconds.setText("How many seconds remain until the AP?");
        Seconds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SecondsActionPerformed(evt);
            }
        });

        Secondslabel.setText("Seconds Countdown");

        Minuteslabel.setText("Minutes Countdown");

        Hourslabel.setText("Days Countdown");

        Dayslabel.setText("Hours Countdown");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(Seconds, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Minuteslabel)
                            .addComponent(Secondslabel)
                            .addComponent(Dayslabel)
                            .addComponent(Hourslabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(timerstart)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Secondslabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Minuteslabel)
                        .addGap(14, 14, 14)
                        .addComponent(Dayslabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Hourslabel))
                    .addComponent(Seconds, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timerstart, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void timerstartActionPerformed(java.awt.event.ActionEvent evt) {                                           
     
    //public void run(){
        //this code executes every one second
        seconds = Integer.valueOf(Seconds.getText());
        days = seconds/60/60/24; 
        minutes = 60;
        if(seconds < 0)
        {   
            minutes--;
        }
        int hours = 24;
        if (minutes < 0 )
        {
            hours--;
        }
        days = 7;
        if (hours < 0)
        {
        days--;
        }
        Seconds.setText("Time until AP:" + days + "days, " + hours 
        + "hours, " + minutes + "minutes, and " + seconds + 
        "seconds.");
        if (days == 0 && hours == 0 && seconds ==0)
        {
            Seconds.setText("It's time for the AP");
        
        };


    }                                          

    private void SecondsActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void tickActionPerformed(java.awt.event.ActionEvent evt)
    {
        
    }
    private void startActionPerformed(java.awt.event.ActionEvent evt)
    {
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(APCountdownGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(APCountdownGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(APCountdownGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(APCountdownGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new APCountdownGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel Dayslabel;
    private javax.swing.JLabel Hourslabel;
    private javax.swing.JLabel Minuteslabel;
    private javax.swing.JTextField Seconds;
    private javax.swing.JLabel Secondslabel;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton timerstart;
    // End of variables declaration                   
}
